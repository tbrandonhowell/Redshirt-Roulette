{"ast":null,"code":"var _jsxFileName = \"/Users/Brandon/Documents/bootcamp/5_homework/13_React/Redshirt-Roulette/app/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport shuffle from './Shuffle'; // shuffle function from https://stackoverflow.com/a/2450976/1293256\n\nimport picArray from './Array'; // our array of image names and IDs\n\nimport Header from \"./components/header\";\nimport Gamebody from \"./components/gamebody\"; // import 'materialize-css/dist/css/materialize.min.css'\n// import M from \"materialize-css\";\n// TODO: need logic for winning / losing the game\n\nconsole.log(\"picArray:\");\nconsole.log(picArray);\nvar shuffledArray = shuffle(picArray.slice());\nconsole.log(\"shuffledArray:\");\nconsole.log(shuffledArray); // const instance = M.Modal.getInstance(\"#modal1\")\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageArray: [],\n      answersArray: [],\n      currentScore: 0,\n      topScore: 0,\n      scoreStyle: \"\"\n    };\n\n    this.catchAnswer = id => {\n      console.log(id);\n      let tempAnswersArray = this.state.answersArray;\n\n      if (this.state.answersArray.indexOf(id) === -1) {\n        console.log(\"correct answer\");\n        tempAnswersArray.push(id);\n        let tempCurrentScore = this.state.currentScore + 1;\n        let tempTopScore;\n\n        if (this.state.currentScore + 1 > this.state.topScore) {\n          tempTopScore = this.state.currentScore + 1;\n        } else {\n          tempTopScore = this.state.topScore;\n        }\n\n        this.setState({\n          answersArray: tempAnswersArray,\n          currentScore: tempCurrentScore,\n          topScore: tempTopScore,\n          scoreStyle: \"correct\"\n        }, function () {\n          console.log(\"this.state.answersArray:\");\n          console.log(this.state.answersArray);\n        });\n      } else {\n        console.log(\"incorrect answer\");\n        tempAnswersArray = [];\n        this.setState({\n          answersArray: tempAnswersArray,\n          currentScore: 0,\n          scoreStyle: \"incorrect\"\n        }, function () {\n          console.log(\"this.state.answersArray:\");\n          console.log(this.state.answersArray); // instance.open();\n        });\n      }\n\n      let tempImageArray = shuffle(this.state.imageArray.slice());\n      this.setState({\n        imageArray: tempImageArray\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      imageArray: shuffledArray\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currentScore: this.state.currentScore,\n      topScore: this.state.topScore,\n      yourScore: this.state.scoreStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"second-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Click on a Redshirt to earn points, but don't click on any Redshirt more than once!\")), React.createElement(Gamebody, {\n      imageArray: this.state.imageArray,\n      catchAnswer: this.catchAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Built with \", React.createElement(\"a\", {\n      href: \"https://reactjs.org/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"React\"), \" | Logo Created with \", React.createElement(\"a\", {\n      href: \"https://fontmeme.com/star-trek-font/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"FontMeme\"), \" | Created by \", React.createElement(\"a\", {\n      href: \"http://brandonhowell.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Brandon Howell\"), \" | GitHub \", React.createElement(\"a\", {\n      href: \"https://github.com/tbrandonhowell/Redshirt-Roulette\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Repo\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Brandon/Documents/bootcamp/5_homework/13_React/Redshirt-Roulette/app/src/App.js"],"names":["React","Component","shuffle","picArray","Header","Gamebody","console","log","shuffledArray","slice","App","state","imageArray","answersArray","currentScore","topScore","scoreStyle","catchAnswer","id","tempAnswersArray","indexOf","push","tempCurrentScore","tempTopScore","setState","tempImageArray","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAAiC;;AACjC,OAAOC,QAAP,MAAqB,SAArB,C,CAAgC;;AAChC,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CACA;AACA;AAEA;;AAEAC,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAEA,IAAIK,aAAa,GAAGN,OAAO,CAACC,QAAQ,CAACM,KAAT,EAAD,CAA3B;AAEAH,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,OAAO,CAACC,GAAR,CAAYC,aAAZ,E,CAEA;;AAEA,MAAME,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BU,KAF0B,GAElB;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,YAAY,EAAE,CAHR;AAINC,MAAAA,QAAQ,EAAE,CAJJ;AAKNC,MAAAA,UAAU,EAAE;AALN,KAFkB;;AAAA,SAc1BC,WAd0B,GAcXC,EAAD,IAAQ;AACpBZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,EAAZ;AACA,UAAIC,gBAAgB,GAAG,KAAKR,KAAL,CAAWE,YAAlC;;AACA,UAAI,KAAKF,KAAL,CAAWE,YAAX,CAAwBO,OAAxB,CAAgCF,EAAhC,MAAwC,CAAC,CAA7C,EAAgD;AAC9CZ,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAY,QAAAA,gBAAgB,CAACE,IAAjB,CAAsBH,EAAtB;AACA,YAAII,gBAAgB,GAAG,KAAKX,KAAL,CAAWG,YAAX,GAA0B,CAAjD;AACA,YAAIS,YAAJ;;AACA,YAAM,KAAKZ,KAAL,CAAWG,YAAX,GAA0B,CAA3B,GAAgC,KAAKH,KAAL,CAAWI,QAAhD,EAA2D;AACzDQ,UAAAA,YAAY,GAAG,KAAKZ,KAAL,CAAWG,YAAX,GAA0B,CAAzC;AACD,SAFD,MAEO;AACLS,UAAAA,YAAY,GAAG,KAAKZ,KAAL,CAAWI,QAA1B;AACD;;AACD,aAAKS,QAAL,CAAc;AACZX,UAAAA,YAAY,EAAEM,gBADF;AAEZL,UAAAA,YAAY,EAAEQ,gBAFF;AAGZP,UAAAA,QAAQ,EAAEQ,YAHE;AAIZP,UAAAA,UAAU,EAAE;AAJA,SAAd,EAKE,YAAU;AACVV,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAL,CAAWE,YAAvB;AACD,SARD;AASD,OAnBD,MAmBO;AACLP,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAY,QAAAA,gBAAgB,GAAG,EAAnB;AACA,aAAKK,QAAL,CAAc;AACZX,UAAAA,YAAY,EAAEM,gBADF;AAEZL,UAAAA,YAAY,EAAE,CAFF;AAGZE,UAAAA,UAAU,EAAE;AAHA,SAAd,EAIE,YAAU;AACVV,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAL,CAAWE,YAAvB,EAFU,CAGV;AACD,SARD;AASD;;AACD,UAAIY,cAAc,GAAGvB,OAAO,CAAC,KAAKS,KAAL,CAAWC,UAAX,CAAsBH,KAAtB,EAAD,CAA5B;AACA,WAAKe,QAAL,CAAc;AAACZ,QAAAA,UAAU,EAAEa;AAAb,OAAd;AACD,KAnDyB;AAAA;;AAU1BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,QAAL,CAAc;AAACZ,MAAAA,UAAU,EAAEJ;AAAb,KAAd;AACD;;AAyCDmB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,YAAY,EAAE,KAAKhB,KAAL,CAAWG,YAD3B;AAEE,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,QAFvB;AAGE,MAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWK,UAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FADF,CANF,EASE,oBAAC,QAAD;AACE,MAAA,UAAU,EAAI,KAAKL,KAAL,CAAWC,UAD3B;AAEE,MAAA,WAAW,EAAI,KAAKK,WAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAaE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAc;AAAG,MAAA,IAAI,EAAC,sBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAd,2BAA2E;AAAG,MAAA,IAAI,EAAC,sCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA3E,oBAAoJ;AAAG,MAAA,IAAI,EAAC,0BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAApJ,gBAAmN;AAAG,MAAA,IAAI,EAAC,qDAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAnN,CADF,CAbF,CADF;AA4BD;;AAlFyB;;AAqF5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport shuffle from './Shuffle'; // shuffle function from https://stackoverflow.com/a/2450976/1293256\nimport picArray from './Array'; // our array of image names and IDs\nimport Header from \"./components/header\";\nimport Gamebody from \"./components/gamebody\";\n// import 'materialize-css/dist/css/materialize.min.css'\n// import M from \"materialize-css\";\n\n// TODO: need logic for winning / losing the game\n\nconsole.log(\"picArray:\");\nconsole.log(picArray);\n\nvar shuffledArray = shuffle(picArray.slice());\n\nconsole.log(\"shuffledArray:\");\nconsole.log(shuffledArray);\n\n// const instance = M.Modal.getInstance(\"#modal1\")\n\nclass App extends Component {\n\n  state = {\n    imageArray: [],\n    answersArray: [],\n    currentScore: 0,\n    topScore: 0,\n    scoreStyle: \"\"\n  }\n\n  componentDidMount() {\n    this.setState({imageArray: shuffledArray});\n  }\n\n  catchAnswer = (id) => {\n    console.log(id);\n    let tempAnswersArray = this.state.answersArray;\n    if (this.state.answersArray.indexOf(id) === -1) {\n      console.log(\"correct answer\");\n      tempAnswersArray.push(id);\n      let tempCurrentScore = this.state.currentScore + 1;\n      let tempTopScore;\n      if ( (this.state.currentScore + 1) > this.state.topScore ) {\n        tempTopScore = this.state.currentScore + 1\n      } else {\n        tempTopScore = this.state.topScore\n      }\n      this.setState({\n        answersArray: tempAnswersArray,\n        currentScore: tempCurrentScore,\n        topScore: tempTopScore,\n        scoreStyle: \"correct\"\n      },function(){\n        console.log(\"this.state.answersArray:\");\n        console.log(this.state.answersArray);\n      });\n    } else {\n      console.log(\"incorrect answer\");\n      tempAnswersArray = [];\n      this.setState({\n        answersArray: tempAnswersArray,\n        currentScore: 0,\n        scoreStyle: \"incorrect\"\n      },function(){\n        console.log(\"this.state.answersArray:\");\n        console.log(this.state.answersArray);\n        // instance.open();\n      });\n    }\n    let tempImageArray = shuffle(this.state.imageArray.slice());\n    this.setState({imageArray: tempImageArray});\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header\n          currentScore={this.state.currentScore}\n          topScore={this.state.topScore}\n          yourScore={this.state.scoreStyle}\n        />\n        <div id=\"second-header\">\n          <h5>Click on a Redshirt to earn points, but don't click on any Redshirt more than once!</h5>\n        </div>\n        <Gamebody\n          imageArray = {this.state.imageArray}\n          catchAnswer = {this.catchAnswer}\n        />\n        <div id=\"footer\">\n          <p>Built with <a href=\"https://reactjs.org/\">React</a> | Logo Created with <a href=\"https://fontmeme.com/star-trek-font/\">FontMeme</a> | Created by <a href=\"http://brandonhowell.com\">Brandon Howell</a> | GitHub <a href=\"https://github.com/tbrandonhowell/Redshirt-Roulette\">Repo</a></p>\n        </div>\n        {/* <div id=\"modal1\" className=\"modal\">\n          <div className=\"modal-content\">\n            <h4>Modal Header</h4>\n            <p>A bunch of text</p>\n          </div>\n          <div className=\"modal-footer\">\n            <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a>\n          </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}